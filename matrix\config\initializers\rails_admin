# RailsAdmin config file. Generated on October 16, 2011 17:36
# See github.com/sferik/rails_admin for more informations

RailsAdmin.config do |config|

  config.current_user_method { current_user } # auto-generated

  config.main_app_name { ['CRM', 'Admin'] } # auto-generated

  #  ==> Authentication (before_filter)
  # This is run inside the controller instance so you can setup any authentication you need to.
  # By default, the authentication will run via warden if available.
  # and will run on the default user scope.
  # If you use devise, this will authenticate the same as authenticate_user!
  # Example Devise admin
  # RailsAdmin.config do |config|
  #   config.authenticate_with do
  #     authenticate_admin!
  #   end
  # end
  # Example Custom Warden
  # RailsAdmin.config do |config|
  #   config.authenticate_with do
  #     warden.authenticate! :scope => :paranoid
  #   end
  # end

  #  ==> Authorization
  # Use cancan https://github.com/ryanb/cancan for authorization:
  config.authorize_with :cancan

  # Or use simple custom authorization rule:
  # config.authorize_with do
  #   redirect_to root_path unless warden.user.is_admin?
  # end

  # Use a specific role for ActiveModel's :attr_acessible :attr_protected
  # Default is :default
  # current_user is accessible in the block if you want to make it user specific.
  # config.attr_accessible_role { :default }

  #  ==> Global show view settings
  # Display empty fields in show views
  config.compact_show_view = false

  #  ==> Global list view settings
  # Number of default rows per-page:
  # config.default_items_per_page = 50

  #  ==> Included models
  # Add all excluded models here:
  config.excluded_models << Country << Post << Keyword <<
    SocialServiceUser << HaStatus << SocialService << ProfileTag

  # Add models here if you want to go 'whitelist mode':
  # config.included_models << []

  # Application wide tried label methods for models' instances
  config.label_methods << :to_label # Default is [:name, :title]

  #  ==> Global models configuration
  # config.models do
  #   # Configuration here will affect all included models in all scopes, handle with care!
  #
  #   list do
  #     # Configuration here will affect all included models in list sections (same for show, export, edit, update, create)
  #
  #     fields :name, :other_name do
  #       # Configuration here will affect all fields named [:name, :other_name], in the list section, for all included models
  #     end
  #
  #     fields_of_type :date do
  #       # Configuration here will affect all date fields, in the list section, for all included models. See README for a comprehensive type list.
  #     end
  #   end
  # end
  # config.models do
  #   list do
  #     exclude_fields :id
  #   end
  # end


  #
  #  ==> Model specific configuration
  # Keep in mind that *all* configuration blocks are optional.
  # RailsAdmin will try his best to provide the best defaults for each section, for each field!
  # Try to override as few things as possible, in the most generic way. Try to avoid setting labels for models and attributes, use ActiveRecord I18n API instead.
  # Less code is better code!
  # config.model MyModel do
  #   # Here goes your cross-section field configuration for ModelName.
  #   object_label_method :name     # Name of the method called for pretty printing an *instance* of ModelName
  #   label 'My model'              # Name of ModelName (smartly defaults to ActiveRecord's I18n API)
  #   label_plural 'My models'      # Same, plural
  #   weight -1                     # Navigation priority. Bigger is higher.
  #   parent OtherModel             # Set parent model for navigation. MyModel will be nested below. OtherModel will be on first position of the dropdown
  #   navigation_label              # Sets dropdown entry's name in navigation. Only for parents!
  #   # Section specific configuration:
  #   list do
  #     filters [:id, :name]  # Array of field names which filters should be shown by default in the table header
  #     items_per_page 100    # Override default_items_per_page
  #     sort_by :id           # Sort column (default is primary key)
  #     sort_reverse true     # Sort direction (default is true for primary key, last created first)
  #     # Here goes the fields configuration for the list view
  #   end
  #   show do
  #     # Here goes the fields configuration for the show view
  #   end
  #   export do
  #     # Here goes the fields configuration for the export view (CSV, yaml, XML)
  #   end
  #   edit do
  #     # Here goes the fields configuration for the edit view (for create and update view)
  #   end
  #   create do
  #     # Here goes the fields configuration for the create view, overriding edit section settings
  #   end
  #   update do
  #     # Here goes the fields configuration for the update view, overriding edit section settings
  #   end
  # end

  # fields configuration is described in the Readme, if you have other question, ask us on the mailing-list!

  #  ==> Your models configuration, to help you get started!

  # hiding these classes from top-level
  [ProfileInfluence, ProfileInterest, PostCondition, StateProvince].each do |klass|
    config.model klass do
      visible false
    end
  end

  #config.models do
  #  list do
  #    fields_of_type :datetime do
  #      strftime_format "%d %b, %Y %H:%M"
  #    end
  #  end
  #end

  config.model User do
    object_label_method :to_label
    weight -4

    list do
      sort_by :role, :created_at
      field :id
      field :role
      field :name
      field :email
      field :active do
        label "Is active"
      end
    end

    show do
      field :active
      field :role
      field :name
      field :email
      field :sign_in_count
      field :current_sign_in_ip
      field :last_sign_in_ip
      field :current_sign_in_at
      field :last_sign_in_at
      field :created_at
      field :updated_at
      field :email_signature do
        formatted_value do
          bindings[:view].raw(bindings[:object].email_signature)
        end
      end
    end

    edit do
      field :active
      field :role
      field :name
      field :email
      field :password
      field :password_confirmation
      field :email_signature, :text do
        ckeditor true
      end
    end
  end

  config.model Tag do
    weight -3
    label "Tags"

    list do
      field :id
      field :name
      exclude_fields :created_at, :updated_at
    end

    edit do
      field :name
      field :profiles
    end
  end

  config.model ProfileSearch do
    label 'Searches'
    weight -2

    list do
      field :id
      field :name do
        formatted_value do
          href = bindings[:view].main_app.search_profiles_path(:search => bindings[:object].data)
          bindings[:view].link_to(value, href)
        end
      end
      field :user do
        searchable [:name, :email]
      end
      exclude_fields :data, :created_at, :updated_at
    end

    show do
      field :public
      field :name
      field :description
      field :user
    end

    edit do
      field :public
      field :name
      field :description
      field :user
    end
  end

  config.model Condition do
    weight -1

    list do
      sort_by :name
      field :name
      field :interested_count do
        label "interested"
      end
      field :interested_opted_in_count do
        label "interested opt ins"
      end
      field :influencers_count do
        label "influencers"
      end
      field :influencers_opted_in_count do
        label "influencers opt ins"
      end
    end

    show do
      group :default do
        field :name
        field :legacy do
          label "Legacy name"
        end
        field :interested
        field :influencers
      end
    end
  end

  config.model Profile do
    weight 0

    list do
      field :photo do
        column_width 70
        formatted_value do
          if bindings[:object].photo.present?
            bindings[:view].link_to(
              bindings[:view].image_tag(
                bindings[:object].photo.url(:small)), bindings[:object].photo.url)
          end
        end
      end
      field :first_name
      field :last_name
      field :score
      field :completeness do
        label "Rate"
      end
      field :ha_status do
        label 'Status'
        searchable [:value]
      end
      field :primary_email_address_string do
        label 'Primary Email'
      end
      field :created_at
    end

    show do
      group :default do
        field :name do
          label ''
          formatted_value do
            bindings[:view].render :partial => 'profile_show_name'
          end
        end
        field :ha_status do
          label 'Status'
        end
        field :gender
        field :timezone
        field :participation_frequency do
          label "Participation"
        end
        field :score
        field :created_at
      end

      group :campaigns_g do
        label 'Campaigns'
        field :campaigns do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_campaigns'
          end
        end
      end

      group :projects_g do
        label 'Projects'
        field :projects do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_projects'
          end
        end
      end

      group :health_sites_g do
        label 'Health Sites'
        field :health_sites do
          label ""
        end
      end

      group :influences_and_interests_g do
        label ''
        field :interests do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_influences_and_interests'
          end
        end
      end

      group :phone_g do
        label "Phones"
        field :phones do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_phones'
          end
        end
      end

      group :email_g do
        label "Email Addresses"
        field :email_addresses do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_email'
          end
        end
      end

      group :social_g do
        label "Social Profiles"
        field :social_profiles do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_social_profiles'
          end
        end
      end

      group :photos_g do
        label 'Photos'
        field :photos do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_photos'
          end
        end
      end

      group :documents_g do
        label "Documents"
        field :documents do
          label ""
          pretty_value do
            bindings[:view].render :partial => 'profile_show_documents'
          end
        end
      end

      group :notes_g do
        label 'Notes'
        field :notes do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_notes'
          end
        end
      end

      group :email_messages_g do
        label "Email Messages"
        field :email_messages do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'profile_show_email_messages'
          end
        end
      end

      group :sources_g do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end

      group :tags_g do
        label 'Tags'
        field :tags do
          label ""
        end
      end

      group :external_links_g do
        label "External Links"
        field :external_links do
          label ""
        end
      end

      group :cookie_g do
        label "Cookie"
        field :wh_cookie do
          label ""
        end
      end

      group :data_g do
        label ""
        field :data do
          visible do
            not bindings[:object].data.blank?
          end
          label ""
          pretty_value do
            bindings[:view].render :partial => 'show_data'
          end
        end
      end
    end

    edit do
      field :first_name
      field :last_name
      field :primary_email_address do
        visible do
          !bindings[:object].new_record?
        end
        partial "profile_primary_email_address"
      end
      field :ha_status do
        label "Status"
      end
      field :gender
      field :timezone
      field :participation_frequency
      field :birthday
      #field :email_addresses
      field :do_not_contact
      field :deceased
      field :photos
      field :owned_health_sites
      field :interests do
        associated_collection_cache_all true
        label "Interested Conditions"
      end
      field :influences do
        associated_collection_cache_all true
        label "Influencer Conditions"
      end
      field :health_sites do
        associated_collection_cache_all true
        label "Health Sites"
      end
      field :tags do
        associated_collection_cache_all true
        label "Tags"
      end
      field :campaigns
      field :projects
      field :notes
      #field :social_profiles
    end

    create do
      field :phones do
        visible do # workaround
          unless bindings[:object].phones.any?
            bindings[:object].phones.build
          end
        end
        partial "profile_phone"
      end
      field :email_addresses do
        visible do # workaround
          unless bindings[:object].email_addresses.any?
            bindings[:object].email_addresses.build
          end
          true
        end
        partial "profile_email_address"
      end
      field :photos
      field :interests do
        associated_collection_cache_all true
        label "Interested Conditions"
      end
      field :influences do
        associated_collection_cache_all true
        label "Influencer Conditions"
      end
      field :projects
      field :social_profiles do
        visible do # workaround
          unless bindings[:object].social_profiles.any?
            bindings[:object].social_profiles.build(:social_service_type => 'Blog')
            bindings[:object].social_profiles.build(:social_service_type => 'Facebook')
            bindings[:object].social_profiles.build(:social_service_type => 'Twitter')
            bindings[:object].social_profiles.build
          end
          true
        end
        partial "profile_social_profiles"
      end

      field :notes do
        visible do # workaround
          unless bindings[:object].notes.any?
            bindings[:object].notes.build
          end
          true
        end
        partial "profile_notes"
      end
    end
  end

  config.model Phone do
    weight 2
    parent Profile

    show do
      field :profile
      field :primary
      field :phone
      field :label

      group :sources do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end
  end

  config.model Address do
    weight 3
    parent Profile

    list do
      field :id
      field :profile
      field :state_province do
        label "State"
      end
      include_all_fields
      exclude_fields :created_at, :postal_code, :updated_at, :label, :latitude, :longitude, :accuracy, :normalized
    end

    show do
      field :profile
      field :label
      field :address1
      field :address2
      field :city
      field :postal_code
      field :country

      group :sources do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end

    edit do
      field :primary
      field :address1
      field :address2
      field :city
      field :state_province
      field :postal_code
      field :country
      field :label
    end

    create do
      field :profile
    end
  end

  config.model Note do
    weight 4
    parent Profile

    list do
      field :id
      field :profile do
        searchable [:first_name, :last_name, :nickname]
      end
      field :project
      field :title
      field :body
      field :note_type do
        label "Type"
      end
      field :created_by
      include_all_fields # all other default fields will be added after, conveniently
      exclude_fields :captured_at, :updated_at, :id # but you still can remove fields
    end

    show do
      group :default do
        field :note_type do
          label "Type"
        end
        field :profile
        field :project
        field :created_by
        field :updated_by
        field :captured_at
        field :created_at
        field :title
        field :body do
          pretty_value do
            bindings[:view].raw("<pre>#{bindings[:object].body}</pre>")
          end
        end
      end
    end
  end

  config.model Document do
    weight 5
    parent Profile

    list do
      field :id
      field :profile
      field :document_type do
        label "Type"
      end
      field :document_file_name do
        label "File name"
      end
    end

    show do
      field :profile
      field :document
      field :document_type

      group :sources do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end

    edit do
      field :document
      field :document_type
      field :profile
      field :uploaded_by
    end
  end

  config.model ProfilePhoto do
    weight 6
    label "Photos"
    parent Profile

    list do
      field :id
      field :image
      field :profile
    end

    show do
      field :profile
      field :image

      group :sources do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end
  end

  config.model ExternalLink do
    weight 7
    parent Profile
  end

  config.model SocialProfile do
    weight 1
    navigation_label "Social Profiles"
    label "Profiles"

    list do
      field :id
      field :profile
      field :profile_url do
        label "URL"
      end
      field :social_service_type do
        label "Type"
      end
      field :failed
      exclude_fields :created_at, :updated_at
    end

    show do
      group :default do
        field :failed
        field :profile
        field :profile_url do
          pretty_value do
            bindings[:view].render :partial => "social_profile_show_profile_url"
          end
        end
        field :social_service_type do
          label "Service type"
        end
      end

      group :sources do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end

    edit do
      field :profile_url
      field :social_service_type
      field :profile
    end
  end

  config.model Tweet do
    weight 1
    parent SocialProfile
    label "Tweets"

    list do
      field :id
      field :user_image do
        formatted_value do
          bindings[:view].image_tag(bindings[:object].user_image)
        end
      end
      field :user_name do
        formatted_value do
          uname = bindings[:object].user_name
          bindings[:view].link_to(uname, "http://twitter.com/#{uname}", :target => "_blank")
        end
      end
      field :tweet_text
    end

    show do
      field :social_profile
      field :tweet_id do
        label "Tweet id"
      end
      field :tweet_source do
        formatted_value do
          bindings[:view].raw(bindings[:object].tweet_source)
        end
      end
      field :tweet_text
      field :tweet_created_at

      group :user_g do
        label "User"
        field :user_id
        field :user_name do
          formatted_value do
            uname = bindings[:object].user_name
            bindings[:view].link_to(uname, "http://twitter.com/#{uname}", :target => "_blank")
          end
        end
        field :user_image do
          formatted_value do
            bindings[:view].image_tag(bindings[:object].user_image)
          end
        end
      end

      group :sources_g do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end
  end

  config.model EmailAddress do
    weight 2
    navigation_label "Emails"
    label "Addresses"

    list do
      field :id
      field :profile
      field :primary
      field :address
      field :opt_in_status
    end

    create do
      field :primary
      field :address
      field :opt_in_status
      field :opt_in_details
      field :label
      field :profile
    end

    edit do
      field :primary
      field :address
      field :opt_in_status
      field :opt_in_details
      field :label
    end
  end

  config.model EmailMessage do
    label "Messages"
    parent EmailAddress

    list do
      field :id
      field :success
      field :email_address
      field :subject do
        formatted_value do
          bindings[:object].subject
        end
      end
      field :from_name
      field :from_address
      field :sent_at
      field :body do
        searchable true
        visible false
      end
    end

    show do
      group :default do
        field :success
        field :email_address
        field :email_template
        field :mailing
        field :sent_at
      end

      group :sender_info_g do
        label "Sender info"
        field :from_name
        field :from_address
      end

      group :review_g do
        label "Rewiew"
        field :subject do
          formatted_value do
            bindings[:object].subject
          end
        end
        field :body do
          label ""
          formatted_value do
            bindings[:view].render :partial => "email_messages_show_body"
          end
        end
      end

      group :attachments_g do
        label "Attachments"
        field :attachments do
          label ""
        end
      end

      group :sources_g do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end

    edit do
      field :send_now, :boolean do
        visible do
          bindings[:object].send_now = true if bindings[:object].present?
          true
        end
      end
      field :email_address
      field :email_template
      field :subject
      field :body do
        ckeditor true
      end
    end
  end

  config.model Mailing do
    label "Mailing"
    parent EmailAddress

    list do
      field :id
      field :service_name
      field :mid
      field :sent_at
      field :name
      field :subject
    end

    show do
      field :service_name
      field :mid
      field :name
      field :subject
      field :sent_at

      group :sources do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end
    end

    edit do
      field :service_name
      field :mid
      field :sent_at
      field :name
      field :subject
    end
  end

  config.model EmailTemplate do
    label "Templates"
    parent EmailAddress

    list do
      field :id
      field :name
      field :subject
      field :body
    end

    show do
      field :name
      field :subject
      field :body do
        formatted_value do
          bindings[:view].raw(bindings[:object].body)
        end
      end
      include_all_fields
    end

    edit do
      field :name
      field :subject
      field :body, :text do
        ckeditor true
      end
    end
  end

  config.model HealthSite do
    weight 3
    navigation_label "Health Sites"
    label "Sites"

    list do
      field :id
      field :url
      field :owner
      field :members
    end

    show do
      field :url
      field :owner

      group :members_g do
        label "Members"
        field :profiles do
          label ""
        end
      end
    end

    edit do
      field :url
      field :owner
      #field :health_site_members
    end
  end

  config.model HealthSiteMember do
    label "Members"
    parent HealthSite

    list do
      field :id
      field :profile
      field :health_site
      field :created_at
    end
  end

  config.model Campaign do
    weight 4

    list do
      field :name
      field :comm_count do
        label "Community"
      end
      field :comm_opted_in_count do
        label "Community Opt Ins"
      end
      field :ha_count do
        label "Health Activist"
      end
      field :ha_opted_in_count do
        label "Health Activist Opt Ins"
      end
      field :opted_in_count do
        label "Profiles"
      end
      field :count do
        label "Profile Opt Ins"
      end
    end

    show do
      group :default do
        field :name
        field :created_at
        field :updated_at
      end

      group :sources_g do
        label "Sources"
        field :sources do
          label ''
          pretty_value do
            bindings[:view].render :partial => 'show_sources'
          end
        end
      end

      group :profiles_g do
        label "Profiles"
        field :profiles do
          label ""
        end
      end
    end

    edit do
      field :name
      field :profiles
    end
  end

  config.model Project do
    weight 5
    label "Projects"

    list do
      field :profiles do
        searchable []
      end
      field :created_by do
        searchable [:name, :email, :role]
      end
      field :updated_by do
        searchable [:name, :email, :role]
      end
      include_all_fields
      exclude_fields :created_at, :updated_at, :id
    end
  end

  config.model Journal do
    weight 6
  end

  config.model Source do
    weight 7
    navigation_label "Sources"

    list do
      field :id
      field :name
      field :status do
        column_width 80
      end
      field :processed do
        column_width 75
      end
      field :skipped do
        column_width 70
      end
      field :added do
        column_width 60
      end
      field :merged do
        column_width 60
      end
      field :duplicates do
        column_width 80
      end
      field :failed do
        column_width 60
      end
      field :import_date
      field :imported_by
    end

    show do
      group :default do
        field :status
        field :name
        field :source
        field :import_date
        field :import_error
        field :imported_by
        field :invalid_records do
          visible do
            bindings[:object].operation_errors.present?
          end
          formatted_value do
            href = bindings[:view].main_app.errors_report_source_path(bindings[:object])
            bindings[:view].link_to("Download .xls", href)
          end
        end
      end

      group :statistic_g do
        label "Import info"
        field :processed
        field :skipped
        field :added
        field :merged
        field :duplicates
        field :failed
      end

      group :imported do
        label "Imported items"
        field :imported do
          label ""
          formatted_value do
            bindings[:view].render :partial => 'source_show_imported'
          end
        end
      end

      group :delayed_jobs do
        field :job do
          label ""
        end
      end
    end
  end

  config.model ObjectSource do
    parent Source
    visible false
  end

  config.model DelayedJob do
    weight 8
    object_label_method :to_label

    list do
      sort_by :id
      field :id
      field :jid
      field :name
      field :queue do
        formatted_value do
          bindings[:object].job.queue.humanize rescue "-"
        end
      end
      field :status do
        column_width 90
      end
      field :progress do
        column_width 70
      end
      field :created_at do
        column_width 135
      end
      field :updated_at do
        column_width 135
      end
      exclude_fields :target, :response
    end

    show do
      group :default do
        field :basic_info do
          label ""
          formatted_value do
            bindings[:view].render :partial => 'show_delayed_job_info'
          end
        end
      end

      group :source_g do
        label "Source"
        field :source do
          label ""
        end
      end

      group :progress_g do
        label "Progress"
        field :progress do
          formatted_value do
            bindings[:view].render :partial => 'show_delayed_job_progress'
          end
        end
      end

      group :summary_g do
        label "Summary"
        field :summary do
          label ""
          formatted_value do
            bindings[:view].render :partial => 'show_delayed_job_summary'
          end
        end
      end

      group :log_g do
        label "Log"
        field :log do
          label ""
          formatted_value do
            bindings[:view].render :partial => 'show_delayed_job_log'
          end
        end
      end
    end
  end

  config.model AppendQueue do
    weight 9
    label "All Queues"
    navigation_label "Queues"
  end

  config.model FacebookPhotoAppendQueue do
    weight 1
    parent AppendQueue
    label "Facebook Photo"
  end

  config.model TwitterPhotoAppendQueue do
    weight 2
    parent AppendQueue
    label "Twitter Photo"
  end

  config.model FliptopAppendQueue do
    weight 3
    parent AppendQueue
    label "Fliptop"
  end

  config.model RapportiveAppendQueue do
    weight 4
    parent AppendQueue
    label "Rapportive"
  end

  config.model QwerlyAppendQueue do
    weight 5
    parent AppendQueue
    label "Qwerly"
  end

  config.model TestSocialProfilesAppendQueue do
    weight 6
    parent AppendQueue
    label "Test Social Profiles"
  end

  config.model SocialProfileDataAppendQueue do
    weight 7
    parent AppendQueue
    label "Social Profiles Data"
  end

  config.model Ckeditor::Asset do
    weight 100
    navigation_label "CKEditor"
    label "All files"

    field :id
    field :assetable
    field :type
    field :data_file_name do
      label "File name"
    end
    field :data_file_size do
      label "File size"
    end
    field :width
    field :height

    exclude_fields :created_at, :updated_at
  end

  config.model Ckeditor::AttachmentFile do
    weight 1
    label "Attachments"
    parent Ckeditor::Asset

    field :id
    field :assetable
    field :data_file_name do
      label "File name"
    end
    field :data_file_size do
      label "File size"
    end

    exclude_fields :created_at, :updated_at
  end

  config.model Ckeditor::Picture do
    weight 2
    label "Pictures"
    parent Ckeditor::Asset

    field :id
    field :data do
      label "Image"
    end
    field :assetable
    field :data_file_name do
      label "File name"
    end
    field :data_file_size do
      label "File size"
    end
    field :width
    field :height

    exclude_fields :created_at, :updated_at
  end

  config.model Occurrence do
    weight 101
    navigation_label "Tracking"
    label "Occurences"
  end

  config.model Visitor do
    weight 1
    parent Occurrence
    label "Visitors"
  end

  config.model TrackingSession do
    weight 2
    parent Occurrence
    label "Sessions"
  end

  config.model PageDetail do
    weight 3
    parent Occurrence
    label "Details"
  end

  config.model WhCookie do
    weight 4
    parent Occurrence
    label "Cookie"

    list do
      field :profile
      field :wh_eh
      field :created_at
      field :updated_at
    end

    show do
      field :profile
      field :wh_eh
      field :created_at
      field :updated_at

      group :visitors_g do
        label "Visitors"
        field :visitors do
          label ""
        end
      end
    end
  end

  # Hidden models

  config.model ProfileInterest do
    label "Interest"
  end

  config.model ProfileInfluence do
    label "Influence"
  end
end

# You made it this far? You're looking for something that doesn't exist! Add it to RailsAdmin and send us a Pull Request!